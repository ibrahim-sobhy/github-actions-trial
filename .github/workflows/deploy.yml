name: Deploy to ECS

on:
  pull_request:
    branchs:
      - master
    types: [ closed ]
  push:
    branches:
      - master

env:
  ECR_REPO: 495425317860.dkr.ecr.eu-west-1.amazonaws.com/github-action-trial
  AWS_DEFAULT_REGION: eu-west-1
  VERSION: $(git rev-parse --short HEAD)

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Cache Maven Repo Files
        uses: actions/cache@v1.1.0
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Maven Build
        run: mvn clean verify package -DskipTests=true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: 495425317860

      - name: Upload to ECR Docker Registry
        id: build-image
        run: |
          docker build -t ${ECR_REPO}:$GITHUB_SHA .
          docker push ${ECR_REPO}:$GITHUB_SHA
          echo "::set-output name=image::$ECR_REPO:$GITHUB_SHA"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: Github-actions-trial
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          cluster: mycluster
          wait-for-service-stability: true